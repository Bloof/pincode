[{"F:\\pincode\\src\\index.tsx":"1","F:\\pincode\\src\\serviceWorker.ts":"2","F:\\pincode\\src\\store.ts":"3","F:\\pincode\\src\\App.tsx":"4","F:\\pincode\\src\\rootSaga.ts":"5","F:\\pincode\\src\\reducers\\pincodeReducer.ts":"6","F:\\pincode\\src\\actions\\actions.ts":"7","F:\\pincode\\src\\sagas\\pincodePage.ts":"8","F:\\pincode\\src\\api\\checkPincode.ts":"9"},{"size":389,"mtime":1611767129760,"results":"10","hashOfConfig":"11"},{"size":5424,"mtime":1611767129763,"results":"12","hashOfConfig":"11"},{"size":468,"mtime":1611767129764,"results":"13","hashOfConfig":"11"},{"size":1875,"mtime":1611771050866,"results":"14","hashOfConfig":"11"},{"size":204,"mtime":1611767129762,"results":"15","hashOfConfig":"11"},{"size":556,"mtime":1611767129762,"results":"16","hashOfConfig":"11"},{"size":563,"mtime":1611767129759,"results":"17","hashOfConfig":"11"},{"size":725,"mtime":1611767129763,"results":"18","hashOfConfig":"11"},{"size":230,"mtime":1611767129760,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1bkyfqb",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"F:\\pincode\\src\\index.tsx",[],["43","44"],"F:\\pincode\\src\\serviceWorker.ts",[],"F:\\pincode\\src\\store.ts",["45"],"import { createStore, compose, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { pincodeReducer } from \"./reducers/pincodeReducer\";\r\nimport { rootSaga } from './rootSaga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport function configureStore() {\r\n  return createStore(\r\n      pincodeReducer,\r\n      applyMiddleware(sagaMiddleware)\r\n  );\r\n}\r\nexport const store = configureStore();\r\n\r\nsagaMiddleware.run(rootSaga);\r\n","F:\\pincode\\src\\App.tsx",["46"],"F:\\pincode\\src\\rootSaga.ts",[],"F:\\pincode\\src\\reducers\\pincodeReducer.ts",["47"],"import { createReducer, action } from \"typesafe-actions\";\r\nimport { produce } from \"immer\";\r\nimport { PinReducerState } from \"../types/general\"\r\nimport { appActions, AppAction } from \"../actions/actions\";\r\n\r\nconst initialState: PinReducerState = {\r\n    isOpen: false\r\n}\r\n\r\nexport const pincodeReducer = createReducer<PinReducerState, AppAction>(initialState)\r\n    .handleAction(appActions.pincodeCheckSuccess, (state, action) => {\r\n        return produce(state, (draftState) => {\r\n                draftState.isOpen = action.payload;\r\n        });\r\n    });\r\n","F:\\pincode\\src\\actions\\actions.ts",[],"F:\\pincode\\src\\sagas\\pincodePage.ts",["48","49","50"],"import { takeEvery, take, put, call, select } from \"redux-saga/effects\";\r\nimport { ActionType, Action } from \"typesafe-actions\";\r\nimport { AppActionConstants, appActions } from \"../actions/actions\";\r\nimport { checkPincode } from \"../api/checkPincode\";\r\n\r\nexport function* watchPincodeTrigger() {\r\n    yield takeEvery(AppActionConstants.PINCODE_CHECK_TRIGGER, handleCheckPincode);\r\n}\r\n\r\nexport function* handleCheckPincode(action: ActionType<typeof appActions.pincodeCheckTrigger>) {\r\n    try {\r\n        const response: boolean = yield call(checkPincode, action.payload);        \r\n        yield put(appActions.pincodeCheckSuccess(response));\r\n    } catch (error) {\r\n        console.log(\"Call to api failed\" + error);\r\n    }\r\n}","F:\\pincode\\src\\api\\checkPincode.ts",[],["51","52"],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":23,"nodeType":"59","messageId":"60","endLine":1,"endColumn":30},{"ruleId":"57","severity":1,"message":"61","line":24,"column":9,"nodeType":"59","messageId":"60","endLine":24,"endColumn":23},{"ruleId":"57","severity":1,"message":"62","line":1,"column":25,"nodeType":"59","messageId":"60","endLine":1,"endColumn":31},{"ruleId":"57","severity":1,"message":"63","line":1,"column":21,"nodeType":"59","messageId":"60","endLine":1,"endColumn":25},{"ruleId":"57","severity":1,"message":"64","line":1,"column":38,"nodeType":"59","messageId":"60","endLine":1,"endColumn":44},{"ruleId":"57","severity":1,"message":"65","line":2,"column":22,"nodeType":"59","messageId":"60","endLine":2,"endColumn":28},{"ruleId":"53","replacedBy":"66"},{"ruleId":"55","replacedBy":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"@typescript-eslint/no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","'handleDispatch' is assigned a value but never used.","'action' is defined but never used.","'take' is defined but never used.","'select' is defined but never used.","'Action' is defined but never used.",["68"],["69"],"no-global-assign","no-unsafe-negation"]